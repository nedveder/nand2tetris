// BOOTSTRAP
@256
D=A
@SP
M=D
@54
0;JMP
// JEQ COMP INIT
@R13
M=D
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=0
@END_EQ
D;JNE
@SP
A=M-1
M=-1
(END_EQ)
@R13
A=M
0;JMP
// JGT COMP INIT
@R13
M=D
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=0
@END_GT
D;JLE
@SP
A=M-1
M=-1
(END_GT)
@R13
A=M
0;JMP
// JLT COMP INIT
@R13
M=D
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=0
@END_LT
D;JGE
@SP
A=M-1
M=-1
(END_LT)
@R13
A=M
0;JMP
// CALL Sys.init vars:0
@Sys.init$ret0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Sys.init$ret0)
// FUNCTION Class1.set vars:0
(Class1.set)
//PUSH/POP C_PUSH segment:argument index:0
@2
D=M
@0
A=A+D
D=A
@R14
M=D
@R14
A=M
D=M
@SP
M=M+1
A=M-1
M=D
//PUSH/POP C_POP segment:static index:0
@Class1.0
D=A
@R14
M=D
@SP
AM=M-1
D=M
@R14
A=M
M=D
//PUSH/POP C_PUSH segment:argument index:1
@2
D=M
@1
A=A+D
D=A
@R14
M=D
@R14
A=M
D=M
@SP
M=M+1
A=M-1
M=D
//PUSH/POP C_POP segment:static index:1
@Class1.1
D=A
@R14
M=D
@SP
AM=M-1
D=M
@R14
A=M
M=D
//PUSH/POP C_PUSH segment:constant index:0
@0
D=A
@R14
M=D
@R14
D=M
@SP
M=M+1
A=M-1
M=D
// RETURN Class1.set
@LCL
D=M
@R14
M=D
@5
A=D-A
D=M
@R15
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R14
AM=M-1
D=M
@THAT
M=D
@R14
AM=M-1
D=M
@THIS
M=D
@R14
AM=M-1
D=M
@ARG
M=D
@R14
AM=M-1
D=M
@LCL
M=D
@R15
A=M
0;JMP
// FUNCTION Class1.get vars:0
(Class1.get)
//PUSH/POP C_PUSH segment:static index:0
@Class1.0
D=A
@R14
M=D
@R14
A=M
D=M
@SP
M=M+1
A=M-1
M=D
//PUSH/POP C_PUSH segment:static index:1
@Class1.1
D=A
@R14
M=D
@R14
A=M
D=M
@SP
M=M+1
A=M-1
M=D
// ARITMETIC sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// RETURN Class1.get
@LCL
D=M
@R14
M=D
@5
A=D-A
D=M
@R15
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R14
AM=M-1
D=M
@THAT
M=D
@R14
AM=M-1
D=M
@THIS
M=D
@R14
AM=M-1
D=M
@ARG
M=D
@R14
AM=M-1
D=M
@LCL
M=D
@R15
A=M
0;JMP
// FUNCTION Sys.init vars:0
(Sys.init)
//PUSH/POP C_PUSH segment:constant index:6
@6
D=A
@R14
M=D
@R14
D=M
@SP
M=M+1
A=M-1
M=D
//PUSH/POP C_PUSH segment:constant index:8
@8
D=A
@R14
M=D
@R14
D=M
@SP
M=M+1
A=M-1
M=D
// CALL Class1.set vars:2
@Class1.set$ret0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.set
0;JMP
(Class1.set$ret0)
//PUSH/POP C_POP segment:temp index:0
@5
D=A
@R14
M=D
@SP
AM=M-1
D=M
@R14
A=M
M=D
//PUSH/POP C_PUSH segment:constant index:23
@23
D=A
@R14
M=D
@R14
D=M
@SP
M=M+1
A=M-1
M=D
//PUSH/POP C_PUSH segment:constant index:15
@15
D=A
@R14
M=D
@R14
D=M
@SP
M=M+1
A=M-1
M=D
// CALL Class2.set vars:2
@Class2.set$ret0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.set
0;JMP
(Class2.set$ret0)
//PUSH/POP C_POP segment:temp index:0
@5
D=A
@R14
M=D
@SP
AM=M-1
D=M
@R14
A=M
M=D
// CALL Class1.get vars:0
@Class1.get$ret0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.get
0;JMP
(Class1.get$ret0)
// CALL Class2.get vars:0
@Class2.get$ret0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.get
0;JMP
(Class2.get$ret0)
//LABEL WHILE
(Sys.init$WHILE)
//GOTO WHILE
@Sys.init$WHILE
0;JMP
// FUNCTION Class2.set vars:0
(Class2.set)
//PUSH/POP C_PUSH segment:argument index:0
@2
D=M
@0
A=A+D
D=A
@R14
M=D
@R14
A=M
D=M
@SP
M=M+1
A=M-1
M=D
//PUSH/POP C_POP segment:static index:0
@Class2.0
D=A
@R14
M=D
@SP
AM=M-1
D=M
@R14
A=M
M=D
//PUSH/POP C_PUSH segment:argument index:1
@2
D=M
@1
A=A+D
D=A
@R14
M=D
@R14
A=M
D=M
@SP
M=M+1
A=M-1
M=D
//PUSH/POP C_POP segment:static index:1
@Class2.1
D=A
@R14
M=D
@SP
AM=M-1
D=M
@R14
A=M
M=D
//PUSH/POP C_PUSH segment:constant index:0
@0
D=A
@R14
M=D
@R14
D=M
@SP
M=M+1
A=M-1
M=D
// RETURN Class2.set
@LCL
D=M
@R14
M=D
@5
A=D-A
D=M
@R15
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R14
AM=M-1
D=M
@THAT
M=D
@R14
AM=M-1
D=M
@THIS
M=D
@R14
AM=M-1
D=M
@ARG
M=D
@R14
AM=M-1
D=M
@LCL
M=D
@R15
A=M
0;JMP
// FUNCTION Class2.get vars:0
(Class2.get)
//PUSH/POP C_PUSH segment:static index:0
@Class2.0
D=A
@R14
M=D
@R14
A=M
D=M
@SP
M=M+1
A=M-1
M=D
//PUSH/POP C_PUSH segment:static index:1
@Class2.1
D=A
@R14
M=D
@R14
A=M
D=M
@SP
M=M+1
A=M-1
M=D
// ARITMETIC sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// RETURN Class2.get
@LCL
D=M
@R14
M=D
@5
A=D-A
D=M
@R15
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R14
AM=M-1
D=M
@THAT
M=D
@R14
AM=M-1
D=M
@THIS
M=D
@R14
AM=M-1
D=M
@ARG
M=D
@R14
AM=M-1
D=M
@LCL
M=D
@R15
A=M
0;JMP
