function Memory.init 0
push constant 0
pop static 0
push constant 2048
pop static 1
push static 1
push static 0
add
push constant 14336
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 1
push constant 1
add
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.peek 0
push argument 0
push static 0
add
pop pointer 1
push that 0
return
function Memory.poke 0
push argument 0
push static 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.getHead 0
push static 1
return
function Memory.isNodeFit 0
push argument 0
push static 0
add
pop pointer 1
push that 0
push constant 2
sub
push argument 1
lt
not
return
function Memory.nodeLength 0
push argument 0
push static 0
add
pop pointer 1
push that 0
return
function Memory.nextNode 0
push argument 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 0
push constant 1
add
push static 0
add
pop pointer 1
push that 0
return
function Memory.lengthDiff 0
push argument 0
push argument 1
sub
return
function Memory.setLength 0
push argument 0
push static 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.printNode 0
push constant 9
call String.new 1
push constant 97
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push argument 0
call Output.printInt 1
pop temp 0
push constant 7
call String.new 1
push constant 32
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 120
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push argument 0
call Memory.nextNode 1
call Output.printInt 1
pop temp 0
push constant 9
call String.new 1
push constant 32
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 103
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 104
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push argument 0
call Memory.nodeLength 1
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push constant 0
return
function Memory.printList 1
call Memory.getHead 0
pop local 0
push constant 5
call String.new 1
push constant 108
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 58
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
call Memory.printNode 1
pop temp 0
push local 0
call Memory.nextNode 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 3
call String.new 1
push constant 101
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 100
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push constant 0
return
function Memory.findFirstFit 1
call Memory.getHead 0
pop local 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
push local 0
call Memory.nodeLength 1
push argument 0
lt
and
not
if-goto WHILE_END0
push local 0
call Memory.nextNode 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
neg
return
label IF_FALSE0
push local 0
return
function Memory.linkPrev 2
call Memory.getHead 0
pop local 0
push local 0
push argument 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
call Memory.nextNode 1
pop static 1
push constant 0
return
label IF_FALSE0
label WHILE_EXP0
push local 0
call Memory.nextNode 1
push argument 0
eq
not
not
if-goto WHILE_END0
push local 0
call Memory.nextNode 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 0
call Memory.nextNode 1
call Memory.nextNode 1
pop local 1
push local 0
push constant 1
add
push local 1
call Memory.poke 2
pop temp 0
push constant 0
return
function Memory.alloc 2
push argument 0
push constant 1
add
call Memory.findFirstFit 1
pop local 0
push local 0
push local 0
call Memory.nodeLength 1
add
push argument 0
sub
push constant 1
sub
pop local 1
push local 0
push local 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
call Memory.linkPrev 1
pop temp 0
label IF_FALSE0
push local 0
push local 0
call Memory.nodeLength 1
push argument 0
sub
push constant 1
sub
call Memory.setLength 2
pop temp 0
push local 1
push argument 0
push constant 1
add
call Memory.setLength 2
pop temp 0
push local 1
push constant 1
add
return
function Memory.deAlloc 0
push argument 0
push static 1
call Memory.poke 2
pop temp 0
push argument 0
push constant 1
sub
pop static 1
push constant 0
return
function Memory.max 3
push argument 0
push constant 1
sub
push static 0
add
pop pointer 1
push that 0
pop local 0
push constant 0
push argument 0
add
pop pointer 1
push that 0
pop local 2
push constant 1
pop local 1
label WHILE_EXP0
push local 1
push local 0
lt
not
if-goto WHILE_END0
push local 1
push argument 0
add
pop pointer 1
push that 0
push local 2
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push argument 0
add
pop pointer 1
push that 0
pop local 2
label IF_FALSE0
goto WHILE_EXP0
label WHILE_END0
push local 2
return
